================Python====================================
class Solution:
    def repeatedSubstringPattern(self, s: str) -> bool:
        n = len(s)

        for i in range(n//2, 0, -1):
            if n % i == 0:
                # subtring
                str = s[0:i]
                k = n // i
                # repeat the substring for n/(length of substring) time and check if matches with orignal
                if str*k == s:
                    return True
            
        return False

=============================C++===========================
class Solution {
public:
    bool repeatedSubstringPattern(string s) {
        int n = s.length();

        for(int i=n/2; i>=1; i--)
        {
            if(n % i == 0)
            {
                //subtring
                string subs = s.substr(0,i);
                int k = n / i;

                // repeat the substring for n/(length of substring) time and check if matches with orignal
                string str = "";
                for(int j=0; j<k; j++)
                {
                    str += subs;
                }

                if(s == str)
                    return true;
            }
        }
        return false;
    }
};
